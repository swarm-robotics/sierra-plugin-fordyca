sim:
  sim_metrics_leaf: 'metrics'
  argos_frames_leaf: 'frames'

sierra:
  collate_csv_leaf: 'collated-csvs'
  collate_graph_leaf: 'collated-graphs'
  avg_output_leaf: 'averaged-output'
  project_frames_leaf: 'project-frames'
  models_leaf: 'models'

perf:
  intra_perf_csv: 'block-transport.csv'
  # Journal scenario 1
  # inverted: false
  # intra_perf_col: 'cum_avg_transported'
  # inter_perf_csv: 'blocks-transported-cum-avg.csv'
  # raw_perf_title: 'Swarm Blocks Collected'
  # raw_perf_ylabel: '# Blocks'

  # Journal scenario 2
  inverted: false
  intra_perf_col: 'cum_avg_initial_wait_time'
  inter_perf_csv: 'block-transport-time-cum-avg.csv'
  raw_perf_title: 'Target Average Transport Time (Cumulative)'
  raw_perf_ylabel: 'Timesteps'

  interference_count_csv: 'interference-in-cum-avg.csv'
  interference_duration_csv: 'interference-duration-cum-avg.csv'
  tv_environment_csv: 'tv-environment.csv'
  tv_population_csv: 'tv-population.csv'

  # # Journal scenario1
  # emergence:
  #   alpha_T: 0.50
  #   alpha_S: 0.50

  # flexibility:
  #   alpha_R: 0.5
  #   alpha_A: 0.5

  #   hz: # [5000] second periods
  #     - 0.00004

  #   BC_amp:
  #     - 0
  #     - 0.05
  #     - 0.1
  #     - 0.15
  #     - 0.20
  #     - 0.25
  #     - 0.30
  #     - 0.35
  #     - 0.40

  # robustness:
  #   alpha_SAA: 0.1
  #   alpha_PD: 0.9
  #   gaussian_ticks_mean_range: [0.0, 0.0]
  #   gaussian_ticks_stddev_range: [0.0, 0.03]
  #   gaussian_ticks_src: stddev

  #   sensors:
  #     light:
  #       model: gaussian
  #       mean_range: [0.0, 0.0]
  #       stddev_range: [0.0, 0.03]
  #     proximity:
  #       model: gaussian
  #       mean_range: [0.0, 0.0]
  #       stddev_range: [0.0, 0.03]
  #     ground:
  #       model: gaussian
  #       mean_range: [0.0, 0.0]
  #       stddev_range: [0.0, 0.03]
  #     steering:
  #       model: gaussian
  #       mean_range: [0.0, 0.0]
  #       stddev_range: [0.0, 0.03]
  #     position:
  #       model: gaussian
  #       mean_range: [0.0, 0.0]
  #       stddev_range: [0.0, 0.03]

  #   actuators:
  #     steering:
  #       model: gaussian
  #       # Factor of 1.0 = normal operation, so inject noise around that setpoint
  #       mean_range: [1.0, 1.0]
  #       stddev_range: [0.0, 0.03]

  # Journal scenario2
  # emergence:
  #   alpha_T: 0.75
  #   alpha_S: 0.25

  flexibility:
  #   alpha_R: 0.5
  #   alpha_A: 0.5

    hz: # [10,000] second periods
      - 0.00002

    M_amp:
      - 0
      - 0.05
      - 0.1
      - 0.15
      - 0.2
      - 0.25
      - 0.3
      - 0.35
      - 0.4

  robustness:
    # alpha_SAA: 0.6
    # alpha_PD: 0.4
    gaussian_ticks_mean_range: [0.0, 0.0]
    gaussian_ticks_stddev_range: [0.0, 0.1]
    gaussian_ticks_src: stddev

    sensors:
      light:
        model: gaussian
        mean_range: [0.0, 0.0]
        stddev_range: [0.0, 0.1]
      proximity:
        model: gaussian
        mean_range: [0.0, 0.0]
        stddev_range: [0.0, 0.1]
      ground:
        model: gaussian
        mean_range: [0.0, 0.0]
        stddev_range: [0.0, 0.1]
      steering:
        model: gaussian
        mean_range: [0.0, 0.0]
        stddev_range: [0.0, 0.1]
      position:
        model: gaussian
        mean_range: [0.0, 0.0]
        stddev_range: [0.0, 0.1]

    actuators:
      steering:
        model: gaussian
        # Factor of 1.0 = normal operation, so inject noise around that setpoint
        mean_range: [1.0, 1.0]
        stddev_range: [0.0, 0.1]
